-- Esquema base Compras/Ventas – Subdistribuidores (PyME)
-- Requiere Oracle 12c+ (IDENTITY)

-- 1) Catálogos y seguridad básica
CREATE TABLE rol (
  id_rol NUMBER GENERATED BY DEFAULT AS IDENTITY,
  nombre VARCHAR2(30) NOT NULL,
  CONSTRAINT pk_rol PRIMARY KEY (id_rol),
  CONSTRAINT uq_rol__nombre UNIQUE (nombre)
);

CREATE TABLE usuario (
  id_usuario NUMBER GENERATED BY DEFAULT AS IDENTITY,
  username VARCHAR2(40) NOT NULL,
  password_hash VARCHAR2(200) NOT NULL,
  nombre VARCHAR2(120) NOT NULL,
  id_rol NUMBER NOT NULL,
  activo CHAR(1) DEFAULT 'S' NOT NULL CHECK (activo IN ('S','N')),
  fecha_creacion TIMESTAMP(6) DEFAULT SYSTIMESTAMP NOT NULL,
  creado_por VARCHAR2(60) DEFAULT USER NOT NULL,
  fecha_actualizacion TIMESTAMP(6),
  actualizado_por VARCHAR2(60),
  CONSTRAINT pk_usuario PRIMARY KEY (id_usuario),
  CONSTRAINT uq_usuario__username UNIQUE (username)
);

-- 2) Configuración (IVA u otros parámetros de sistema)
CREATE TABLE parametro_sistema (
  id_parametro NUMBER GENERATED BY DEFAULT AS IDENTITY,
  codigo VARCHAR2(50) NOT NULL,
  valor_num NUMBER(12,4),
  valor_texto VARCHAR2(200),
  descripcion VARCHAR2(200),
  CONSTRAINT pk_parametro_sistema PRIMARY KEY (id_parametro),
  CONSTRAINT uq_parametro__codigo UNIQUE (codigo)
);

-- 3) Maestros de negocio
CREATE TABLE proveedor (
  id_proveedor NUMBER GENERATED BY DEFAULT AS IDENTITY,
  rut VARCHAR2(15) NOT NULL,
  razon_social VARCHAR2(150) NOT NULL,
  giro VARCHAR2(120),
  telefono VARCHAR2(30),
  email VARCHAR2(120),
  direccion VARCHAR2(200),
  activo CHAR(1) DEFAULT 'S' NOT NULL CHECK (activo IN ('S','N')),
  fecha_creacion TIMESTAMP(6) DEFAULT SYSTIMESTAMP NOT NULL,
  creado_por VARCHAR2(60) DEFAULT USER NOT NULL,
  fecha_actualizacion TIMESTAMP(6),
  actualizado_por VARCHAR2(60),
  CONSTRAINT pk_proveedor PRIMARY KEY (id_proveedor),
  CONSTRAINT uq_proveedor__rut UNIQUE (rut)
);

CREATE TABLE cliente (
  id_cliente NUMBER GENERATED BY DEFAULT AS IDENTITY,
  rut VARCHAR2(15), -- opcional
  nombre VARCHAR2(150) NOT NULL,
  telefono VARCHAR2(30),
  email VARCHAR2(120),
  direccion VARCHAR2(200),
  activo CHAR(1) DEFAULT 'S' NOT NULL CHECK (activo IN ('S','N')),
  fecha_creacion TIMESTAMP(6) DEFAULT SYSTIMESTAMP NOT NULL,
  creado_por VARCHAR2(60) DEFAULT USER NOT NULL,
  fecha_actualizacion TIMESTAMP(6),
  actualizado_por VARCHAR2(60),
  CONSTRAINT pk_cliente PRIMARY KEY (id_cliente),
  CONSTRAINT uq_cliente__rut UNIQUE (rut)
);

CREATE TABLE producto (
  id_producto NUMBER GENERATED BY DEFAULT AS IDENTITY,
  sku VARCHAR2(40) NOT NULL,
  nombre VARCHAR2(150) NOT NULL,
  formato VARCHAR2(10) NOT NULL,
  unidad_medida VARCHAR2(10) DEFAULT 'UN' NOT NULL,
  costo NUMBER(12,2) DEFAULT 0 NOT NULL,
  precio NUMBER(12,2) DEFAULT 0 NOT NULL,
  imagen_url VARCHAR2(300),
  activo CHAR(1) DEFAULT 'S' NOT NULL CHECK (activo IN ('S','N')),
  fecha_creacion TIMESTAMP(6) DEFAULT SYSTIMESTAMP NOT NULL,
  creado_por VARCHAR2(60) DEFAULT USER NOT NULL,
  fecha_actualizacion TIMESTAMP(6),
  actualizado_por VARCHAR2(60),
  CONSTRAINT pk_producto PRIMARY KEY (id_producto),
  CONSTRAINT uq_producto__sku UNIQUE (sku),
  CONSTRAINT ck_producto__formato CHECK (formato IN ('5KG','11KG','15KG','45KG','VMF','VMA')),
  CONSTRAINT ck_producto__precios CHECK (costo >= 0 AND precio >= 0)
);

CREATE TABLE inventario (
  id_producto NUMBER NOT NULL,
  stock_actual NUMBER(12,2) DEFAULT 0 NOT NULL,
  stock_minimo NUMBER(12,2) DEFAULT 0 NOT NULL,
  CONSTRAINT pk_inventario PRIMARY KEY (id_producto)
);

-- 4) Compras
CREATE TABLE factura_compra (
  id_factura_compra NUMBER GENERATED BY DEFAULT AS IDENTITY,
  id_proveedor NUMBER NOT NULL,
  numero VARCHAR2(40) NOT NULL,
  fecha DATE NOT NULL,
  direccion_entrega VARCHAR2(200),
  neto NUMBER(14,2) DEFAULT 0 NOT NULL,
  iva NUMBER(14,2) DEFAULT 0 NOT NULL,
  total NUMBER(14,2) DEFAULT 0 NOT NULL,
  id_usuario_registra NUMBER NOT NULL,
  estado VARCHAR2(15) DEFAULT 'BORRADOR' NOT NULL,
  fecha_creacion TIMESTAMP(6) DEFAULT SYSTIMESTAMP NOT NULL,
  creado_por VARCHAR2(60) DEFAULT USER NOT NULL,
  fecha_actualizacion TIMESTAMP(6),
  actualizado_por VARCHAR2(60),
  CONSTRAINT pk_factura_compra PRIMARY KEY (id_factura_compra),
  CONSTRAINT ck_fc__estado CHECK (estado IN ('BORRADOR','REGISTRADA','ANULADA'))
);

CREATE TABLE factura_compra_detalle (
  id_detalle NUMBER GENERATED BY DEFAULT AS IDENTITY,
  id_factura_compra NUMBER NOT NULL,
  id_producto NUMBER NOT NULL,
  cantidad NUMBER(12,2) NOT NULL CHECK (cantidad > 0),
  costo_unitario NUMBER(12,2) NOT NULL CHECK (costo_unitario >= 0),
  subtotal NUMBER(14,2) GENERATED ALWAYS AS (ROUND(cantidad * costo_unitario, 2)) VIRTUAL,
  CONSTRAINT pk_fc_detalle PRIMARY KEY (id_detalle),
  CONSTRAINT uq_fc_det__fc_prod UNIQUE (id_factura_compra, id_producto)
);

-- 5) Ventas
CREATE TABLE boleta_venta (
  id_boleta NUMBER GENERATED BY DEFAULT AS IDENTITY,
  numero VARCHAR2(40) NOT NULL, -- serie/nro interno
  fecha DATE DEFAULT TRUNC(SYSDATE) NOT NULL,
  id_usuario_vende NUMBER NOT NULL,
  id_cliente NUMBER, -- opcional
  neto NUMBER(14,2) DEFAULT 0 NOT NULL,
  iva NUMBER(14,2) DEFAULT 0 NOT NULL,
  total NUMBER(14,2) DEFAULT 0 NOT NULL,
  metodo_pago VARCHAR2(30),
  estado VARCHAR2(15) DEFAULT 'CREADA' NOT NULL,
  fecha_creacion TIMESTAMP(6) DEFAULT SYSTIMESTAMP NOT NULL,
  creado_por VARCHAR2(60) DEFAULT USER NOT NULL,
  fecha_actualizacion TIMESTAMP(6),
  actualizado_por VARCHAR2(60),
  CONSTRAINT pk_boleta PRIMARY KEY (id_boleta),
  CONSTRAINT ck_boleta__estado CHECK (estado IN ('CREADA','PAGADA','ANULADA'))
);

CREATE TABLE boleta_venta_detalle (
  id_detalle NUMBER GENERATED BY DEFAULT AS IDENTITY,
  id_boleta NUMBER NOT NULL,
  id_producto NUMBER NOT NULL,
  cantidad NUMBER(12,2) NOT NULL CHECK (cantidad > 0),
  precio_unitario NUMBER(12,2) NOT NULL CHECK (precio_unitario >= 0),
  descuento NUMBER(12,2) DEFAULT 0 NOT NULL CHECK (descuento >= 0),
  subtotal NUMBER(14,2) GENERATED ALWAYS AS (ROUND((cantidad * precio_unitario) - descuento, 2)) VIRTUAL,
  CONSTRAINT pk_boleta_detalle PRIMARY KEY (id_detalle),
  CONSTRAINT uq_boleta_det__bol_prod UNIQUE (id_boleta, id_producto)
);

-- 6) Historial de precios (opcional recomendado)
CREATE TABLE producto_precio_hist (
  id_hist NUMBER GENERATED BY DEFAULT AS IDENTITY,
  id_producto NUMBER NOT NULL,
  tipo VARCHAR2(10) NOT NULL CHECK (tipo IN ('COSTO','VENTA')),
  precio NUMBER(12,2) NOT NULL CHECK (precio >= 0),
  vigente_desde DATE DEFAULT TRUNC(SYSDATE) NOT NULL,
  vigente_hasta DATE,
  usuario_registra VARCHAR2(60) DEFAULT USER NOT NULL,
  fecha_creacion TIMESTAMP(6) DEFAULT SYSTIMESTAMP NOT NULL,
  CONSTRAINT pk_producto_precio_hist PRIMARY KEY (id_hist)
);
