-- Lista de precios (idempotente)

-- Crear tabla LISTA_PRECIO si no existe
DECLARE
  v_cnt PLS_INTEGER;
BEGIN
  SELECT COUNT(*) INTO v_cnt
  FROM user_tables
  WHERE table_name = 'LISTA_PRECIO';

  IF v_cnt = 0 THEN
    EXECUTE IMMEDIATE q'[
CREATE TABLE lista_precio (
  id_lista      NUMBER GENERATED BY DEFAULT AS IDENTITY,
  nombre        VARCHAR2(100) NOT NULL,
  vigente_desde DATE NOT NULL,
  vigente_hasta DATE,
  CONSTRAINT pk_lista_precio PRIMARY KEY (id_lista),
  CONSTRAINT uq_lista_precio__nombre UNIQUE (nombre)
)]';
  END IF;
END;
/

-- Crear tabla LISTA_PRECIO_DET si no existe
DECLARE
  v_cnt PLS_INTEGER;
BEGIN
  SELECT COUNT(*) INTO v_cnt
  FROM user_tables
  WHERE table_name = 'LISTA_PRECIO_DET';

  IF v_cnt = 0 THEN
    EXECUTE IMMEDIATE q'[
CREATE TABLE lista_precio_det (
  id_lista        NUMBER NOT NULL,
  id_producto     NUMBER NOT NULL,
  precio_con_iva  NUMBER(14,2) NOT NULL,
  CONSTRAINT pk_lista_precio_det PRIMARY KEY (id_lista, id_producto)
)]';
  END IF;
END;
/

-- FK fk_lpd__lista (si no existe)
DECLARE
  v_cnt PLS_INTEGER;
BEGIN
  SELECT COUNT(*) INTO v_cnt
  FROM user_constraints
  WHERE table_name = 'LISTA_PRECIO_DET'
    AND constraint_name = 'FK_LPD__LISTA';

  IF v_cnt = 0 THEN
    EXECUTE IMMEDIATE
      'ALTER TABLE lista_precio_det '||
      'ADD CONSTRAINT fk_lpd__lista FOREIGN KEY (id_lista) REFERENCES lista_precio(id_lista)';
  END IF;
END;
/

-- FK fk_lpd__producto (si no existe)
DECLARE
  v_cnt PLS_INTEGER;
BEGIN
  SELECT COUNT(*) INTO v_cnt
  FROM user_constraints
  WHERE table_name = 'LISTA_PRECIO_DET'
    AND constraint_name = 'FK_LPD__PRODUCTO';

  IF v_cnt = 0 THEN
    EXECUTE IMMEDIATE
      'ALTER TABLE lista_precio_det '||
      'ADD CONSTRAINT fk_lpd__producto FOREIGN KEY (id_producto) REFERENCES producto(id_producto)';
  END IF;
END;
/

-- Semilla de la lista base (id=1)
MERGE INTO lista_precio lp
USING (SELECT 1 id_lista, 'BASE 2025' nombre FROM dual) s
ON (lp.id_lista = s.id_lista)
WHEN NOT MATCHED THEN
  INSERT (id_lista, nombre, vigente_desde)
  VALUES (s.id_lista, s.nombre, DATE '2025-01-01')
/


-- Poblar detalle desde producto
MERGE INTO lista_precio_det lpd
USING (
  SELECT 1 id_lista, id_producto, precio precio_con_iva
  FROM producto
) s
ON (lpd.id_lista = s.id_lista AND lpd.id_producto = s.id_producto)
WHEN NOT MATCHED THEN
  INSERT (id_lista, id_producto, precio_con_iva)
  VALUES (s.id_lista, s.id_producto, s.precio_con_iva)
/


-- Parametrizar lista activa en PARAMETRO_SISTEMA
MERGE INTO parametro_sistema ps
USING (
  SELECT
    'PRECIO_LISTA_ACTIVA_ID' codigo,
    1                        valor_num,
    'Id de la lista de precios activa' descripcion
  FROM dual
) s
ON (ps.codigo = s.codigo)
WHEN MATCHED THEN
  UPDATE SET ps.valor_num   = s.valor_num,
             ps.descripcion = s.descripcion
WHEN NOT MATCHED THEN
  INSERT (codigo, valor_num, valor_texto, descripcion)
  VALUES (s.codigo, s.valor_num, NULL, s.descripcion)
/


-- Vista con precios actuales seg√∫n lista activa
CREATE OR REPLACE VIEW v_precio_actual AS
SELECT p.id_producto,
       p.sku,
       p.nombre,
       d.precio_con_iva
FROM producto p
JOIN lista_precio_det d ON d.id_producto = p.id_producto
JOIN lista_precio     lp ON lp.id_lista   = d.id_lista
WHERE lp.id_lista = (
  SELECT valor_num
  FROM parametro_sistema
  WHERE codigo = 'PRECIO_LISTA_ACTIVA_ID'
)
/

