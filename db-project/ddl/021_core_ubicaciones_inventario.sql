-- Inventario y ubicaciones

CREATE TABLE ubicacion (
  id_ubicacion NUMBER GENERATED BY DEFAULT AS IDENTITY,
  nombre       VARCHAR2(100) NOT NULL,
  tipo         VARCHAR2(20)  NOT NULL CHECK (tipo IN ('BODEGA','LOCAL','CAMIONETA','FAMILIAR')),
  activo       CHAR(1) DEFAULT 'S' NOT NULL CHECK (activo IN ('S','N')),
  CONSTRAINT pk_ubicacion PRIMARY KEY (id_ubicacion),
  CONSTRAINT uq_ubicacion__nombre UNIQUE (nombre)
);

CREATE TABLE stock_ubicacion (
  id_ubicacion NUMBER NOT NULL,
  id_producto  NUMBER NOT NULL,
  llenos       NUMBER DEFAULT 0 NOT NULL,
  vacios       NUMBER DEFAULT 0 NOT NULL,
  fecha_actualizacion TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
  CONSTRAINT pk_stock_ubicacion PRIMARY KEY (id_ubicacion, id_producto)
);

CREATE TABLE movimiento_stock (
  id_mov             NUMBER GENERATED BY DEFAULT AS IDENTITY,
  fecha              TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
  tipo               VARCHAR2(20) NOT NULL CHECK (tipo IN ('COMPRA','VENTA','TRASLADO','AJUSTE','CONTEO')),
  id_ubicacion_desde NUMBER,
  id_ubicacion_hasta NUMBER,
  id_producto        NUMBER NOT NULL,
  cantidad           NUMBER NOT NULL,
  es_lleno           CHAR(1) DEFAULT 'S' NOT NULL CHECK (es_lleno IN ('S','N')),
  ref_tipo           VARCHAR2(30),
  ref_id             NUMBER,
  observacion        VARCHAR2(200),
  CONSTRAINT pk_movimiento_stock PRIMARY KEY (id_mov)
);

ALTER TABLE stock_ubicacion ADD CONSTRAINT fk_stock_ubi__ubicacion FOREIGN KEY (id_ubicacion) REFERENCES ubicacion(id_ubicacion);
ALTER TABLE stock_ubicacion ADD CONSTRAINT fk_stock_ubi__producto FOREIGN KEY (id_producto) REFERENCES producto(id_producto);

ALTER TABLE movimiento_stock ADD CONSTRAINT fk_mov_stock__ubi_desde FOREIGN KEY (id_ubicacion_desde) REFERENCES ubicacion(id_ubicacion);
ALTER TABLE movimiento_stock ADD CONSTRAINT fk_mov_stock__ubi_hasta FOREIGN KEY (id_ubicacion_hasta) REFERENCES ubicacion(id_ubicacion);
ALTER TABLE movimiento_stock ADD CONSTRAINT fk_mov_stock__producto FOREIGN KEY (id_producto) REFERENCES producto(id_producto);

CREATE INDEX ix_mov_stock__tipo_fecha ON movimiento_stock (tipo, fecha);
CREATE INDEX ix_mov_stock__id_producto ON movimiento_stock (id_producto);
CREATE INDEX ix_mov_stock__id_ubi_desde ON movimiento_stock (id_ubicacion_desde);
CREATE INDEX ix_mov_stock__id_ubi_hasta ON movimiento_stock (id_ubicacion_hasta);

MERGE INTO ubicacion u
USING (
  SELECT 'BODEGA 1' AS nombre, 'BODEGA' AS tipo FROM dual UNION ALL
  SELECT 'LOCAL'    AS nombre, 'LOCAL'  AS tipo FROM dual UNION ALL
  SELECT 'CAMIONETA' AS nombre, 'CAMIONETA' AS tipo FROM dual UNION ALL
  SELECT 'FAMILIAR' AS nombre, 'FAMILIAR' AS tipo FROM dual
) s
ON (u.nombre = s.nombre)
WHEN NOT MATCHED THEN
  INSERT (nombre, tipo, activo) VALUES (s.nombre, s.tipo, 'S');
