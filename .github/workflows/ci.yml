name: API CI

on:
  push:
    branches: [ main, master, develop ]
    tags: [ 'v*' ]
    paths:
      - "apps/api/**"
      - ".github/workflows/ci.yml"
  pull_request:
    branches: [ main, master, develop ]
    paths:
      - "apps/api/**"
      - ".github/workflows/ci.yml"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  api:
    name: Lint & Build API (workspaces)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: |
            package-lock.json

      - name: Install deps (workspaces, include dev, omit optional)
        run: npm install --workspaces --include=dev --omit=optional --no-audit --no-fund

      - name: Test
        run: npm run -w apps/api test

      # Opcional pero Ãºtil para evitar sorpresas
      - name: Ensure @types/node present in workspace
        run: npm ls -w apps/api @types/node --depth=0 || npm i -w apps/api -D @types/node

      - name: Type check
        run: npm run -w apps/api typecheck --if-present

      - name: Lint
        run: npm run -w apps/api lint --if-present

      - name: Build
        run: npm run -w apps/api build --if-present

      - name: Upload OpenAPI spec
        uses: actions/upload-artifact@v4
        with:
          name: openapi
          path: apps/api/dist/openapi.json

  release_api:
    needs: api
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write
    env:
      TRIVY_SCAN: 'false'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set image repository
        run: echo "IMAGE_REPOSITORY=${GITHUB_REPOSITORY,,}-api" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: apps/api
          file: apps/api/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.IMAGE_REPOSITORY }}:sha-${{ github.sha }}
            ${{ startsWith(github.ref, 'refs/tags/v') && format('ghcr.io/{0}:{1}', env.IMAGE_REPOSITORY, github.ref_name) || '' }}
            ${{ startsWith(github.ref, 'refs/tags/v') && format('ghcr.io/{0}:latest', env.IMAGE_REPOSITORY) || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Trivy scan
        if: env.TRIVY_SCAN == 'true'
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: ghcr.io/${{ env.IMAGE_REPOSITORY }}:sha-${{ github.sha }}
          format: sarif
          output: trivy.sarif

      - name: Upload scan results
        if: env.TRIVY_SCAN == 'true'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy.sarif
